#!/bin/bash

repositoryRootDir=`basename "$(git rev-parse --show-toplevel 2> /dev/null)"`
curDir=`pwd`
codingProjectRootDir="$curDir"
# Space-Separated: each of these files can signify the root of a coding project (e.g. maven, gradle, cargo, composer, ...)
codingProjectDetectionFiles=(pom.xml Cargo.toml build.gradle composer.json Vagrantfile)

# Attempt to find a coding project
for managerFile in ${codingProjectDetectionFiles[@]}; do
	codingProjectRootDir="$curDir"
    while [ ! -f "$codingProjectRootDir/$managerFile" ]
    do
	    if [[ "$codingProjectRootDir" == "/" ]]
    	then
	    	codingProjectRootDir=
		    break
    	fi

	    codingProjectRootDir=`dirname "$codingProjectRootDir"`
    done

    if [ "$codingProjectRootDir" != "" ]
    then
        break
    fi
done

if [ "$repositoryRootDir" == "" ] && [ "$codingProjectRootDir" == "" ];
then
	if [ "$curDir" == "`echo ~`" ]
	then
		echo -n "@ ~"
	else
		echo -n "@ $(basename "$curDir")"
	fi

	exit 0
fi

codingProjectDirname=`basename "$codingProjectRootDir"`

repositoryIndicator="Σ"
codingProjectIndicator="γ"

termtitle=""

if [ "$repositoryRootDir" != "" ] && [ "$codingProjectDirname" == "" ];
then
	termtitle="$repositoryIndicator $repositoryRootDir"
else
	if [ "$codingProjectDirname" != "" ] && [ "$repositoryRootDir" == "" ];
	then
		termtitle="$codingProjectIndicator $codingProjectDirname"
	else
		if [ "$codingProjectDirname" == "$repositoryRootDir" ]
		then
			termtitle="$repositoryIndicator$codingProjectIndicator $repositoryRootDir"
		else
			termtitle="$repositoryIndicator $repositoryRootDir $codingProjectIndicator $codingProjectDirname"
		fi
	fi
fi

echo -n $termtitle
